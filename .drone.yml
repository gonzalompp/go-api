kind: pipeline
name: default
steps:
- name: test
  image: golang:1.14
  commands:
    - "go mod download"
    - "go test -race ./..."
- name: build
  image: golang:1.14
  commands:
    - "go build cmd/api/main.go"
#- name: dockerhub
#  image: plugins/docker
#  settings:
#    repo: gonzalompp/go-api
#    username:
#      from_secret: dockerhub_username
#    password:
#      from_secret: dockerhub_password
#    tags:
#      - latest
#      - ${DRONE_COMMIT_SHA:0:7}
#      - ${DRONE_COMMIT_BRANCH}
- name: deliver
  image: sinlead/drone-kubectl
  settings:
    kubernetes_server:
      from_secret: k8s_server
    kubernetes_cert:
      from_secret: k8s_certificate
    kubernetes_token:
      from_secret: k8s_token
    kubernetes_user:
      from_secret: k8s_user
  commands:
    - kubectl config set-credentials "$PLUGIN_KUBERNETES_USER" --token="$PLUGIN_KUBERNETES_TOKEN"
    - kubectl apply -f deployment.yml
    - kubectl set image deployment/go-api-deployment api=gonzalompp/go-api:${DRONE_COMMIT_SHA:0:7} --record
- name: deliver-check
  image: sinlead/drone-kubectl
  settings:
    kubernetes_server:
      from_secret: k8s_server
    kubernetes_cert:
      from_secret: k8s_certificate
    kubernetes_token:
      from_secret: k8s_token
    kubernetes_user:
      from_secret: k8s_user
  commands:
    - kubectl config set-credentials "$PLUGIN_KUBERNETES_USER" --token="$PLUGIN_KUBERNETES_TOKEN"
    - kubectl rollout status deployment/go-api-deployment --timeout=30s -w
